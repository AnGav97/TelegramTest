AudioWorkletProcessor.prototype._14=function(){this._24=true;this.port.onmessage=(_34)=>{if(_34.data==="kill")this._24=false;};};class _44 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._14();}process(_54,_64,parameters){const input=_54[0];const bypass=parameters.bypass;for(let _74=0;_74<input.length;++_74){const _84=input[_74];for(let _94=0;_94<_84.length;++_94){const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
_64[_a4][_74][_94]=_84[_94];}}return this._24;}}class _b4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._14();}process(_54,_64,parameters){const _c4=_54[0];const _d4=_54[1];const output=_64[0];const gain=parameters.gain;for(let _74=0;_74<_d4.length;++_74){const _84=_d4[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94)_e4[_94]=_84[_94];}for(let _74=0;_74<_c4.length;++_74){const _84=_c4[_74];
const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];_e4[_94]+=_84[_94]*_f4;}}return this._24;}}registerProcessor("audio-bus-input",_44);registerProcessor("audio-bus-output",_b4);class _g4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,
minValue:1,maxValue:100},{name:"resolution",automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _h4=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._k4=new Float32Array(_j4);this._l4=new Uint32Array(_j4);}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;
const gain=parameters.gain;const factor=parameters.factor;const resolution=parameters.resolution;const mix=parameters.mix;for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];if(this._l4[_74]===0)this._k4[_74]=_84[_94];const _m4=(factor[_94]!==undefined)?factor[_94]:factor[0];++this._l4[_74];this._l4[_74]%=_m4;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}let _n4=this._k4[_74];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];
_n4*=_f4;_n4=Math.max(Math.min(_n4,1.0),-1.0);const _o4=(resolution[_94]!==undefined)?resolution[_94]:resolution[0];const max=(_n4>0.0)?_g4._h4[_o4]-1:_g4._h4[_o4];_n4=Math.round(_n4*max)/max;const _p4=(mix[_94]!==undefined)?mix[_94]:mix[0];_e4[_94]*=(1.0-_p4);_e4[_94]+=(_n4*_p4);}}return this._24;}}registerProcessor("bitcrusher-processor",_g4);class _q4{constructor(_r4=1e-3){this.setTime(_r4);}setTime(_r4){this._s4=Math.exp(-1/(_r4*sampleRate));}process(_t4,_u4){return _t4+this._s4*(_u4-_t4);}}class _v4{
constructor(_w4,_x4){this._y4=new _q4(_w4);this._z4=new _q4(_x4);this._A4=_w4;this._B4=_x4;}_C4(_r4){if(_r4===this._A4)return;this._y4.setTime(_r4);this._A4=_r4;}_D4(_r4){if(_r4===this._B4)return;this._z4.setTime(_r4);this._B4=_r4;}process(_t4,_u4){if(_t4>_u4)return this._y4.process(_t4,_u4);else return this._z4.process(_t4,_u4);}}class _E4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",
defaultValue:1,minValue:0},{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_F4){super();this._14();const _y4=_E4.parameterDescriptors.find(_G4=>_G4.name==="attack");
const _z4=_E4.parameterDescriptors.find(_G4=>_G4.name==="release");this._H4=new _v4(_y4.defaultValue,_z4.defaultValue);this._I4=0;}process(_J4,_K4,_L4){const input=_J4[0];const output=_K4[0];const bypass=_L4.bypass;const ingain=_L4.ingain;const outgain=_L4.outgain;const threshold=_L4.threshold;const ratio=_L4.ratio;const attack=_L4.attack;const release=_L4.release;if(input.length===0)return this._24;for(let _94=0;_94<input[0].length;++_94){let _M4=input.map(_N4=>_N4[_94]);output.forEach((_N4,_O4)=>{_N4[_94]=_M4[_O4];
});const _P4=(ingain[_94]!==undefined)?ingain[_94]:ingain[0];_M4=_M4.map(_Q4=>_Q4*=_P4);const rect=_M4.map(_Q4=>Math.abs(_Q4));const max=Math.max(...rect);const _R4=_S4(max);const _T4=(threshold[_94]!==undefined)?threshold[_94]:threshold[0];const _U4=_S4(_T4);const _V4=Math.max(0,_R4-_U4);const _y4=(attack[_94]!==undefined)?attack[_94]:attack[0];const _z4=(release[_94]!==undefined)?release[_94]:release[0];this._H4._C4(_y4);this._H4._D4(_z4);this._I4=this._H4.process(_V4,this._I4);const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];
if(_a4>0)continue;const _o4=(ratio[_94]!==undefined)?ratio[_94]:ratio[0];const _W4=(this._I4/_o4)-this._I4;const _f4=_X4(_W4);_M4=_M4.map(_Q4=>_Q4*=_f4);const _Y4=(outgain[_94]!==undefined)?outgain[_94]:outgain[0];_M4=_M4.map(_Q4=>_Q4*=_Y4);output.forEach((_N4,_O4)=>{_N4[_94]=_M4[_O4];});}return this._24;}}function _S4(_Z4){return 20*Math.log10(_Z4);}function _X4(_Z4){return Math.pow(10,_Z4/20);}registerProcessor("compressor-processor",_E4);class __4 extends AudioWorkletProcessor{static _05=5.0;static get parameterDescriptors(){
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:__4._05},{name:"feedback",automationRate:"a-rate",defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];const _15=(__4._05*sampleRate)+1;this.buffer=new Array(_j4);this._25=new Uint32Array(_j4);for(let _74=0;
_74<_j4;++_74)this.buffer[_74]=new Float32Array(_15);}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;const mix=parameters.mix;for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _T4=(time[_94]!==undefined)?time[_94]:time[0];const _35=this._45(_74,_T4);const _m4=(feedback[_94]!==undefined)?feedback[_94]:feedback[0];
const _55=_84[_94]+(_35*_m4);this.write(_74,_55);const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}const _p4=(mix[_94]!==undefined)?mix[_94]:mix[0];_e4[_94]*=(1-_p4);_e4[_94]+=(_35*_p4);}}return this._24;}_45(_65,_r4){const _75=_r4*sampleRate;let _85=(this._25[_65]-~~_75);let _95=(_85-1);while(_85<0)_85+=this.buffer[_65].length;while(_95<0)_95+=this.buffer[_65].length;const _a5=_75-~~_75;const _b5=this.buffer[_65][_85];const _c5=this.buffer[_65][_95];return _b5+(_c5-_b5)*_a5;}
write(_65,_d5){++this._25[_65];this._25[_65]%=this.buffer[_65].length;this.buffer[_65][this._25[_65]]=_d5;}}registerProcessor("delay-processor",__4);class _e5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._14();}process(_f5,_g5,_h5){const input=_f5[0];const _i5=_g5[0];const _j5=_g5[1];for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _k5=_i5[_74];const _l5=_j5[_74];for(let _94=0;_94<_84.length;++_94){_k5[_94]=_84[_94];_l5[_94]=_84[_94];}}return this._24;
}}class _m5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._14();}process(_f5,_g5,_h5){const _c4=_f5[0];const _d4=_f5[1];const output=_g5[0];const bypass=_h5.bypass;for(let _74=0;_74<_d4.length;++_74){const _n5=_c4[_74];const _o5=_d4[_74];const _e4=output[_74];for(let _94=0;_94<_n5.length;++_94){const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0){_e4[_94]=_o5[_94];}else {
_e4[_94]=_n5[_94];}}}return this._24;}}registerProcessor("eq-input",_e5);registerProcessor("eq-output",_m5);class _p5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,minValue:0.0}];}constructor(){super();this._14();}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let _74=0;_74<input.length;
++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];_e4[_94]*=_f4;}}return this._24;}}registerProcessor("gain-processor",_p5);class _q5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _r5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",
defaultValue:Math.min(5000.0,_r5),minValue:10.0,maxValue:_r5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._s5=0;this._t5=0;this._u5=0;this._v5=0;this._w5=0;this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=new Float32Array(_j4);this._A5=new Float32Array(_j4);this._B5=-1;this._C5=-1;this._D5=-1;}process(_54,
_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _E5=(freq.length===1&&q.length===1&&gain.length===1);if(_E5)this._F5(freq[0],q[0],gain[0]);for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){if(_E5===!1){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];const _G5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];
this._F5(_m4,_G5,_f4);}const _H5=this._u5*_84[_94]+this._v5*this._x5[_74]+this._w5*this._y5[_74]-this._s5*this._z5[_74]-this._t5*this._A5[_74];this._y5[_74]=this._x5[_74];this._x5[_74]=_84[_94];this._A5[_74]=this._z5[_74];this._z5[_74]=_H5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_H5;}}return this._24;}_F5(_I5,_J5,_K5){if(_I5===this._B5&&_J5===this._C5&&_K5===this._D5)return;const _L5=2*Math.PI*_I5/sampleRate;const _M5=Math.cos(_L5);const _N5=Math.sqrt(_K5);const _O5=_N5+1;
const _P5=_N5-1;const _Q5=_O5*_M5;const _R5=_P5*_M5;const _S5=_O5-_R5;const _T5=_O5+_R5;const alpha=Math.sin(_L5)/(2*_J5);const _U5=(2*Math.sqrt(_N5)*alpha);const _V5=_S5+_U5;const _s5=2*(_P5-_Q5);const _t5=_S5-_U5;const _u5=_N5*(_T5+_U5);const _v5=-2*_N5*(_P5+_Q5);const _w5=_N5*(_T5-_U5);this._s5=_s5/_V5;this._t5=_t5/_V5;this._u5=_u5/_V5;this._v5=_v5/_V5;this._w5=_w5/_V5;this._B5=_I5;this._C5=_J5;this._D5=_K5;}}registerProcessor("hi-shelf-processor",_q5);class _W5 extends AudioWorkletProcessor{static get parameterDescriptors(){
const _X5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_X5),minValue:10.0,maxValue:_X5},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._s5=0;this._t5=0;this._u5=0;this._v5=0;this._w5=0;this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=new Float32Array(_j4);
this._A5=new Float32Array(_j4);this._Y5=-1;this._C5=-1;}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _E5=(cutoff.length===1&&q.length===1);if(_E5)this._F5(cutoff[0],q[0]);for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){if(_E5===!1){const _74=(cutoff[_94]!==undefined)?cutoff[_94]:cutoff[0];const _G5=(q[_94]!==undefined)?q[_94]:q[0];
this._F5(_74,_G5);}const _H5=this._u5*_84[_94]+this._v5*this._x5[_74]+this._w5*this._y5[_74]-this._s5*this._z5[_74]-this._t5*this._A5[_74];this._y5[_74]=this._x5[_74];this._x5[_74]=_84[_94];this._A5[_74]=this._z5[_74];this._z5[_74]=_H5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_H5;}}return this._24;}_F5(_Z5,_J5){if(_Z5===this._Y5&&_J5===this._C5)return;const _L5=2*Math.PI*_Z5/sampleRate;const alpha=Math.sin(_L5)/(2*_J5);const _M5=Math.cos(_L5);const _V5=1+alpha;
const _s5=-2*_M5;const _t5=1-alpha;const _u5=(1+_M5)/2;const _v5=-1-_M5;const _w5=(1+_M5)/2;this._s5=_s5/_V5;this._t5=_t5/_V5;this._u5=_u5/_V5;this._v5=_v5/_V5;this._w5=_w5/_V5;this._Y5=_Z5;this._C5=_J5;}}registerProcessor("hpf2-processor",_W5);class __5 extends AudioWorkletProcessor{static get parameterDescriptors(){const _r5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_r5),minValue:10.0,
maxValue:_r5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._s5=0;this._t5=0;this._u5=0;this._v5=0;this._w5=0;this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=new Float32Array(_j4);this._A5=new Float32Array(_j4);this._B5=-1;this._C5=-1;this._D5=-1;}process(_54,_64,parameters){const input=_54[0];const output=_64[0];
const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _E5=(freq.length===1&&q.length===1&&gain.length===1);if(_E5)this._F5(freq[0],q[0],gain[0]);for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){if(_E5===!1){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];const _G5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];this._F5(_m4,_G5,_f4);}const _H5=this._u5*_84[_94]+this._v5*this._x5[_74]+this._w5*this._y5[_74]-this._s5*this._z5[_74]-this._t5*this._A5[_74];
this._y5[_74]=this._x5[_74];this._x5[_74]=_84[_94];this._A5[_74]=this._z5[_74];this._z5[_74]=_H5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_H5;}}return this._24;}_F5(_I5,_J5,_K5){if(_I5===this._B5&&_J5===this._C5&&_K5===this._D5)return;const _L5=2*Math.PI*_I5/sampleRate;const _M5=Math.cos(_L5);const _N5=Math.sqrt(_K5);const _O5=_N5+1;const _P5=_N5-1;const _Q5=_O5*_M5;const _R5=_P5*_M5;const _S5=_O5-_R5;const _T5=_O5+_R5;const alpha=Math.sin(_L5)/(2*_J5);const _U5=(2*Math.sqrt(_N5)*alpha);
const _V5=_T5+_U5;const _s5=-2*(_P5+_Q5);const _t5=_T5-_U5;const _u5=_N5*(_S5+_U5);const _v5=2*_N5*(_P5-_Q5);const _w5=_N5*(_S5-_U5);this._s5=_s5/_V5;this._t5=_t5/_V5;this._u5=_u5/_V5;this._v5=_v5/_V5;this._w5=_w5/_V5;this._B5=_I5;this._C5=_J5;this._D5=_K5;}}registerProcessor("lo-shelf-processor",__5);class _06 extends AudioWorkletProcessor{static get parameterDescriptors(){const _X5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",
defaultValue:Math.min(500.0,_X5),minValue:10.0,maxValue:_X5},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._s5=0;this._t5=0;this._u5=0;this._v5=0;this._w5=0;this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=new Float32Array(_j4);this._A5=new Float32Array(_j4);this._Y5=-1;this._C5=-1;}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;
const cutoff=parameters.cutoff;const q=parameters.q;const _E5=(cutoff.length===1&&q.length===1);if(_E5)this._F5(cutoff[0],q[0]);for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){if(_E5===!1){const _74=(cutoff[_94]!==undefined)?cutoff[_94]:cutoff[0];const _G5=(q[_94]!==undefined)?q[_94]:q[0];this._F5(_74,_G5);}const _H5=this._u5*_84[_94]+this._v5*this._x5[_74]+this._w5*this._y5[_74]-this._s5*this._z5[_74]-this._t5*this._A5[_74];this._y5[_74]=this._x5[_74];
this._x5[_74]=_84[_94];this._A5[_74]=this._z5[_74];this._z5[_74]=_H5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_H5;}}return this._24;}_F5(_Z5,_J5){if(_Z5===this._Y5&&_J5===this._C5)return;const _L5=2*Math.PI*_Z5/sampleRate;const alpha=Math.sin(_L5)/(2*_J5);const _M5=Math.cos(_L5);const _V5=1+alpha;const _s5=-2*_M5;const _t5=1-alpha;const _u5=(1-_M5)/2;const _v5=1-_M5;const _w5=(1-_M5)/2;this._s5=_s5/_V5;this._t5=_t5/_V5;this._u5=_u5/_V5;this._v5=_v5/_V5;this._w5=_w5/_V5;
this._Y5=_Z5;this._C5=_J5;}}registerProcessor("lpf2-processor",_06);class _16 extends AudioWorkletProcessor{static get parameterDescriptors(){const _r5=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,_r5),minValue:10.0,maxValue:_r5},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_i4){
super();this._14();const _j4=_i4.outputChannelCount[0];this._s5=0;this._t5=0;this._u5=0;this._v5=0;this._w5=0;this._x5=new Float32Array(_j4);this._y5=new Float32Array(_j4);this._z5=new Float32Array(_j4);this._A5=new Float32Array(_j4);this._B5=-1;this._C5=-1;this._D5=-1;}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _E5=(freq.length===1&&q.length===1&&gain.length===1);if(_E5)this._F5(freq[0],
q[0],gain[0]);for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){if(_E5===!1){const _m4=(freq[_94]!==undefined)?freq[_94]:freq[0];const _G5=(q[_94]!==undefined)?q[_94]:q[0];const _f4=(gain[_94]!==undefined)?gain[_94]:gain[0];this._F5(_m4,_G5,_f4);}const _H5=this._u5*_84[_94]+this._v5*this._x5[_74]+this._w5*this._y5[_74]-this._s5*this._z5[_74]-this._t5*this._A5[_74];this._y5[_74]=this._x5[_74];this._x5[_74]=_84[_94];this._A5[_74]=this._z5[_74];
this._z5[_74]=_H5;const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];_e4[_94]=(_a4>0)?_84[_94]:_H5;}}return this._24;}_F5(_I5,_J5,_K5){if(_I5===this._B5&&_J5===this._C5&&_K5===this._D5)return;const _L5=2*Math.PI*_I5/sampleRate;const _M5=Math.cos(_L5);const _N5=Math.sqrt(_K5);const alpha=Math.sin(_L5)/(2*_J5);const _26=alpha/_N5;const _36=alpha*_N5;const _V5=1+_26;const _s5=-2*_M5;const _t5=1-_26;const _u5=1+_36;const _v5=_s5;const _w5=1-_36;this._s5=_s5/_V5;this._t5=_t5/_V5;this._u5=_u5/_V5;this._v5=_v5/_V5;
this._w5=_w5/_V5;this._B5=_I5;this._C5=_J5;this._D5=_K5;}}registerProcessor("peak-eq-processor",_16);class _46{constructor(_56){this._66=0;this._76=0;this.feedback=0;this._86=0;this.buffer=new Float32Array(_56);this._96=0;}process(_d5){const out=this.buffer[this._96];this._86=(this._86*this._66)+(out*this._76);this.buffer[this._96]=_d5+(this._86*this.feedback);++this._96;this._96%=this.buffer.length;return out;}_a6(_b6){this.feedback=Math.min(Math.max(0,_b6),1);}_c6(_d6){this._66=Math.min(Math.max(0,
_d6),1);this._76=1-this._66;}}class _e6{constructor(_56){this.feedback=0;this.buffer=new Float32Array(_56);this._96=0;}process(_d5){const out=this.buffer[this._96];this.buffer[this._96]=_d5+(out*this.feedback);++this._96;this._96%=this.buffer.length;return(out-_d5);}_a6(_b6){this.feedback=Math.min(Math.max(0,_b6),1);}}class _f6 extends AudioWorkletProcessor{static _g6=8;static _h6=4;static _i6=0.015;static _j6=0.4;static _k6=0.28;static _l6=0.7;static _m6=[1116,1188,1277,1356,1422,1491,1557,1617];static _n6=[1139,
1211,1300,1379,1445,1514,1580,1640];static _o6=[556,441,341,225];static _p6=[579,464,364,248];static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];
this._q6=-1;this._r6=-1;this._s6=new Array(_j4);this._t6=new Array(_j4);const _u6=[_f6._m6,_f6._n6];const _v6=[_f6._o6,_f6._p6];for(let _74=0;_74<_j4;++_74){this._s6[_74]=new Array(_f6._g6);this._t6[_74]=new Array(_f6._h6);for(let _w6=0;_w6<_f6._g6;++_w6)this._s6[_74][_w6]=new _46(_u6[_74%_u6.length][_w6]);for(let _w6=0;_w6<_f6._h6;++_w6)this._t6[_74][_w6]=new _e6(_v6[_74%_v6.length][_w6]);}this._x6(0.5);this._c6(0.5);for(let _74=0;_74<_j4;++_74)for(let _w6=0;_w6<_f6._h6;++_w6)this._t6[_74][_w6]._a6(0.5);}process(_54,
_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const size=parameters.size;const damp=parameters.damp;const mix=parameters.mix;for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _y6=0;_y6<_84.length;++_y6){const _94=(size[_y6]!==undefined)?size[_y6]:size[0];const _z6=(damp[_y6]!==undefined)?damp[_y6]:damp[0];this._x6(_94);this._c6(_z6);_e4[_y6]=_84[_y6];let out=0;const _n4=_84[_y6]*_f6._i6;for(let _w6=0;_w6<_f6._g6;++_w6)out+=this._s6[_74][_w6].process(_n4);
for(let _w6=0;_w6<_f6._h6;++_w6)out=this._t6[_74][_w6].process(out);const _a4=(bypass[_y6]!==undefined)?bypass[_y6]:bypass[0];if(_a4>0.0){continue;}const _p4=(mix[_y6]!==undefined)?mix[_y6]:mix[0];_e4[_y6]*=(1-_p4);_e4[_y6]+=(out*_p4);}}return this._24;}_x6(_56){if(_56===this._q6)return;const size=(_56*_f6._k6)+_f6._l6;for(let _74=0;_74<this._s6.length;++_74)for(let _w6=0;_w6<_f6._g6;++_w6)this._s6[_74][_w6]._a6(size);this._q6=_56;}_c6(_d6){if(_d6===this._r6)return;const damp=_d6*_f6._j6;for(let _74=0;_74<this._s6.length;
++_74)for(let _w6=0;_w6<_f6._g6;++_w6)this._s6[_74][_w6]._c6(damp);this._r6=_d6;}}registerProcessor("reverb1-processor",_f6);class _A6 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,minValue:0.0,maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,
minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_i4){super();this._14();const _j4=_i4.outputChannelCount[0];this._B6=new Array(_j4).fill(1.0);this._C6=new Array(_j4).fill(0.0);this._D6=new Array(_j4).fill(_E6._F6._G6);this._H6=new Array(_j4);for(let _74=0;_74<_j4;++_74){this._H6[_74]=new _I6();this._H6[_74]._J6(sampleRate);this._H6[_74]._K6(this._B6[_74]);this._H6[_74]._L6(this._D6[_74]);if(_74%2===1){this._H6[_74]._M6(this._C6[_74]);
}}}process(_54,_64,parameters){const input=_54[0];const output=_64[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let _74=0;_74<input.length;++_74){const _84=input[_74];const _e4=output[_74];for(let _94=0;_94<_84.length;++_94){_e4[_94]=_84[_94];const _o4=(rate[_94]!==undefined)?rate[_94]:rate[0];const _N6=(offset[_94]!==undefined)?offset[_94]:offset[0];const _O6=(shape[_94]!==undefined)?shape[_94]:shape[0];
this._P6(_74,_o4,_N6,_O6);const _Q6=this._H6[_74]._45();const _a4=(bypass[_94]!==undefined)?bypass[_94]:bypass[0];if(_a4>0.0){continue;}const _w6=(intensity[_94]!==undefined)?intensity[_94]:intensity[0];const out=_84[_94]*_Q6*_w6;_e4[_94]*=(1.0-_w6);_e4[_94]+=out;}}return this._24;}_P6(_65,_R6,_S6,_T6){if(_R6!==this._B6[_65]){this._H6[_65]._K6(_R6);this._B6[_65]=_R6;}if(_S6!==this._C6[_65]){if(_65%2===1){this._H6[_65]._M6(_S6);}this._C6[_65]=_S6;}if(_T6!==this._D6[_65]){this._H6[_65]._L6(_T6);this._D6[_65]=_T6;
}}}registerProcessor("tremolo-processor",_A6);function _E6(){}_E6._F6={_G6:0,_U6:1,_V6:2,_W6:3,_X6:4,_Y6:5};_E6._Z6=function(__6){return 1.0-__6;};_E6._07=function(__6){return __6;};_E6._17=function(__6){return 0.5*(Math.sin((__6*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_E6._27=function(__6){if(__6<0.5){return 0.0;}return 1.0;};_E6._37=function(__6){if(__6<0.5){return 2.0*__6;}return 2.0-(2.0*__6);};_E6._47=[_E6._Z6,_E6._07,_E6._17,_E6._27,_E6._37];_57._67=512;_57._77=1.0/_57._67;function _57(_87){this.data=new Float32Array(_57._67);
for(let _w6=0;_w6<_57._67;++_w6){this.data[_w6]=_87(_w6*_57._77);}}_57.prototype._45=function(__6){__6=Math.max(0.0,__6);__6=Math.min(__6,1.0);const _97=__6*_57._67;const _a7=~~_97;const _b7=_97-_a7;let _85=_a7;let _95=_85+1;if(_85>=_57._67){_85-=_57._67;}if(_95>=_57._67){_95-=_57._67;}const _b5=this.data[_85];const _c5=this.data[_95];return _b5+(_c5-_b5)*_b7;};_I6._c7=[];_I6._d7=!1;_I6._e7=0.0;_I6._r5=20.0;function _I6(){this._f7=48000;this.shape=_E6._F6._V6;this.freq=1.0;this._g7=0.0;this._77=0.0;this._h7=0.0;
if(_I6._d7==true){return;}for(let _w6=0;_w6<_E6._F6._Y6;++_w6){_I6._c7[_w6]=new _57(_E6._47[_w6]);}_I6._d7=true;}_I6._i7=function(){return(_I6._d7==!0);};_I6.prototype._J6=function(_j7){this._f7=_j7;this._k7();};_I6.prototype._K6=function(_I5){_I5=Math.max(_I6._e7,_I5);_I5=Math.min(_I5,_I6._r5);this.freq=_I5;this._k7();};_I6.prototype._M6=function(_S6){_S6=Math.max(0.0,_S6);_S6=Math.min(_S6,1.0);const _l7=_S6-this._h7;this._h7=_S6;this._g7+=_l7;while(this._g7>=1.0){this._g7-=1.0;}while(this._g7<0.0){
this._g7+=1.0;}};_I6.prototype._L6=function(_T6){_T6=Math.max(0,_T6);_T6=Math.min(_T6,_E6._F6._Y6-1);this.shape=_T6;};_I6.prototype._45=function(){const _m7=_I6._c7[this.shape]._45(this._g7);this._g7+=this._77;while(this._g7>=1.0){this._g7-=1.0;}return _m7;};_I6.prototype._k7=function(){this._77=this.freq/this._f7;};